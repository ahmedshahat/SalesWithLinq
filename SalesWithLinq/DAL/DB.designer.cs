#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalesWithLinq.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SalesDB")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertUnitName(UnitName instance);
    partial void UpdateUnitName(UnitName instance);
    partial void DeleteUnitName(UnitName instance);
    partial void InsertCompanyInfo(CompanyInfo instance);
    partial void UpdateCompanyInfo(CompanyInfo instance);
    partial void DeleteCompanyInfo(CompanyInfo instance);
    partial void InsertCustomerAndSupplier(CustomerAndSupplier instance);
    partial void UpdateCustomerAndSupplier(CustomerAndSupplier instance);
    partial void DeleteCustomerAndSupplier(CustomerAndSupplier instance);
    partial void InsertDrawer(Drawer instance);
    partial void UpdateDrawer(Drawer instance);
    partial void DeleteDrawer(Drawer instance);
    partial void InsertInvoiceDetail(InvoiceDetail instance);
    partial void UpdateInvoiceDetail(InvoiceDetail instance);
    partial void DeleteInvoiceDetail(InvoiceDetail instance);
    partial void InsertInvoiceHeader(InvoiceHeader instance);
    partial void UpdateInvoiceHeader(InvoiceHeader instance);
    partial void DeleteInvoiceHeader(InvoiceHeader instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductUnit(ProductUnit instance);
    partial void UpdateProductUnit(ProductUnit instance);
    partial void DeleteProductUnit(ProductUnit instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    #endregion
		
		public DBDataContext() : 
				base(global::SalesWithLinq.Properties.Settings.Default.SalesDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<UnitName> UnitNames
		{
			get
			{
				return this.GetTable<UnitName>();
			}
		}
		
		public System.Data.Linq.Table<CompanyInfo> CompanyInfos
		{
			get
			{
				return this.GetTable<CompanyInfo>();
			}
		}
		
		public System.Data.Linq.Table<CustomerAndSupplier> CustomerAndSuppliers
		{
			get
			{
				return this.GetTable<CustomerAndSupplier>();
			}
		}
		
		public System.Data.Linq.Table<Drawer> Drawers
		{
			get
			{
				return this.GetTable<Drawer>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this.GetTable<InvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this.GetTable<InvoiceHeader>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductUnit> ProductUnits
		{
			get
			{
				return this.GetTable<ProductUnit>();
			}
		}
		
		public System.Data.Linq.Table<StoreLog> StoreLogs
		{
			get
			{
				return this.GetTable<StoreLog>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UnitName")]
	public partial class UnitName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UnitName()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyInfo")]
	public partial class CompanyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _CompanyName;
		
		private string _CompanyPhone;
		
		private string _CompanyMobile;
		
		private string _CompanyAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyPhoneChanging(string value);
    partial void OnCompanyPhoneChanged();
    partial void OnCompanyMobileChanging(string value);
    partial void OnCompanyMobileChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    #endregion
		
		public CompanyInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyPhone", DbType="NVarChar(MAX)")]
		public string CompanyPhone
		{
			get
			{
				return this._CompanyPhone;
			}
			set
			{
				if ((this._CompanyPhone != value))
				{
					this.OnCompanyPhoneChanging(value);
					this.SendPropertyChanging();
					this._CompanyPhone = value;
					this.SendPropertyChanged("CompanyPhone");
					this.OnCompanyPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyMobile", DbType="NVarChar(MAX)")]
		public string CompanyMobile
		{
			get
			{
				return this._CompanyMobile;
			}
			set
			{
				if ((this._CompanyMobile != value))
				{
					this.OnCompanyMobileChanging(value);
					this.SendPropertyChanging();
					this._CompanyMobile = value;
					this.SendPropertyChanged("CompanyMobile");
					this.OnCompanyMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="NVarChar(MAX)")]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerAndSupplier")]
	public partial class CustomerAndSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _Address;
		
		private int _AccountID;
		
		private bool _IsCustomer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnIsCustomerChanging(bool value);
    partial void OnIsCustomerChanged();
    #endregion
		
		public CustomerAndSupplier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(MAX)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(MAX)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCustomer", DbType="Bit NOT NULL")]
		public bool IsCustomer
		{
			get
			{
				return this._IsCustomer;
			}
			set
			{
				if ((this._IsCustomer != value))
				{
					this.OnIsCustomerChanging(value);
					this.SendPropertyChanging();
					this._IsCustomer = value;
					this.SendPropertyChanged("IsCustomer");
					this.OnIsCustomerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Drawers")]
	public partial class Drawer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TreasyryID;
		
		private string _TreasyryName;
		
		private int _AcoountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTreasyryIDChanging(int value);
    partial void OnTreasyryIDChanged();
    partial void OnTreasyryNameChanging(string value);
    partial void OnTreasyryNameChanged();
    partial void OnAcoountIDChanging(int value);
    partial void OnAcoountIDChanged();
    #endregion
		
		public Drawer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreasyryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TreasyryID
		{
			get
			{
				return this._TreasyryID;
			}
			set
			{
				if ((this._TreasyryID != value))
				{
					this.OnTreasyryIDChanging(value);
					this.SendPropertyChanging();
					this._TreasyryID = value;
					this.SendPropertyChanged("TreasyryID");
					this.OnTreasyryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreasyryName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TreasyryName
		{
			get
			{
				return this._TreasyryName;
			}
			set
			{
				if ((this._TreasyryName != value))
				{
					this.OnTreasyryNameChanging(value);
					this.SendPropertyChanging();
					this._TreasyryName = value;
					this.SendPropertyChanged("TreasyryName");
					this.OnTreasyryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcoountID", DbType="Int NOT NULL")]
		public int AcoountID
		{
			get
			{
				return this._AcoountID;
			}
			set
			{
				if ((this._AcoountID != value))
				{
					this.OnAcoountIDChanging(value);
					this.SendPropertyChanging();
					this._AcoountID = value;
					this.SendPropertyChanged("AcoountID");
					this.OnAcoountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDetails")]
	public partial class InvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InvoiceID;
		
		private int _ItemID;
		
		private int _ItemUnitID;
		
		private double _ItemQty;
		
		private double _Price;
		
		private double _TotalPrice;
		
		private double _CosteValue;
		
		private double _TotalCostValue;
		
		private double _Discount;
		
		private double _DiscountValue;
		
		private int _StoreID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnItemUnitIDChanging(int value);
    partial void OnItemUnitIDChanged();
    partial void OnItemQtyChanging(double value);
    partial void OnItemQtyChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnTotalPriceChanging(double value);
    partial void OnTotalPriceChanged();
    partial void OnCosteValueChanging(double value);
    partial void OnCosteValueChanged();
    partial void OnTotalCostValueChanging(double value);
    partial void OnTotalCostValueChanged();
    partial void OnDiscountChanging(double value);
    partial void OnDiscountChanged();
    partial void OnDiscountValueChanging(double value);
    partial void OnDiscountValueChanged();
    partial void OnStoreIDChanging(int value);
    partial void OnStoreIDChanged();
    #endregion
		
		public InvoiceDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemUnitID", DbType="Int NOT NULL")]
		public int ItemUnitID
		{
			get
			{
				return this._ItemUnitID;
			}
			set
			{
				if ((this._ItemUnitID != value))
				{
					this.OnItemUnitIDChanging(value);
					this.SendPropertyChanging();
					this._ItemUnitID = value;
					this.SendPropertyChanged("ItemUnitID");
					this.OnItemUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemQty", DbType="Float NOT NULL")]
		public double ItemQty
		{
			get
			{
				return this._ItemQty;
			}
			set
			{
				if ((this._ItemQty != value))
				{
					this.OnItemQtyChanging(value);
					this.SendPropertyChanging();
					this._ItemQty = value;
					this.SendPropertyChanged("ItemQty");
					this.OnItemQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float NOT NULL")]
		public double TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CosteValue", DbType="Float NOT NULL")]
		public double CosteValue
		{
			get
			{
				return this._CosteValue;
			}
			set
			{
				if ((this._CosteValue != value))
				{
					this.OnCosteValueChanging(value);
					this.SendPropertyChanging();
					this._CosteValue = value;
					this.SendPropertyChanged("CosteValue");
					this.OnCosteValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCostValue", DbType="Float NOT NULL")]
		public double TotalCostValue
		{
			get
			{
				return this._TotalCostValue;
			}
			set
			{
				if ((this._TotalCostValue != value))
				{
					this.OnTotalCostValueChanging(value);
					this.SendPropertyChanging();
					this._TotalCostValue = value;
					this.SendPropertyChanged("TotalCostValue");
					this.OnTotalCostValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Float NOT NULL")]
		public double Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Float NOT NULL")]
		public double DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int NOT NULL")]
		public int StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceHeader")]
	public partial class InvoiceHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private byte _InvoiceType;
		
		private string _Code;
		
		private string _PartType;
		
		private int _PartID;
		
		private System.DateTime _Date;
		
		private System.Nullable<System.DateTime> _DeliveryDate;
		
		private int _Branch;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _PostDate;
		
		private bool _PostedToStore;
		
		private double _Total;
		
		private double _DiscountValue;
		
		private double _DiscountRation;
		
		private double _Tax;
		
		private double _TaxValue;
		
		private double _Expences;
		
		private double _Net;
		
		private double _Piad;
		
		private int _Drawer;
		
		private double _Remaining;
		
		private string _ShippingAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceTypeChanging(byte value);
    partial void OnInvoiceTypeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnPartTypeChanging(string value);
    partial void OnPartTypeChanged();
    partial void OnPartIDChanging(int value);
    partial void OnPartIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeliveryDateChanged();
    partial void OnBranchChanging(int value);
    partial void OnBranchChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPostDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPostDateChanged();
    partial void OnPostedToStoreChanging(bool value);
    partial void OnPostedToStoreChanged();
    partial void OnTotalChanging(double value);
    partial void OnTotalChanged();
    partial void OnDiscountValueChanging(double value);
    partial void OnDiscountValueChanged();
    partial void OnDiscountRationChanging(double value);
    partial void OnDiscountRationChanged();
    partial void OnTaxChanging(double value);
    partial void OnTaxChanged();
    partial void OnTaxValueChanging(double value);
    partial void OnTaxValueChanged();
    partial void OnExpencesChanging(double value);
    partial void OnExpencesChanged();
    partial void OnNetChanging(double value);
    partial void OnNetChanged();
    partial void OnPiadChanging(double value);
    partial void OnPiadChanged();
    partial void OnDrawerChanging(int value);
    partial void OnDrawerChanged();
    partial void OnRemainingChanging(double value);
    partial void OnRemainingChanged();
    partial void OnShippingAddressChanging(string value);
    partial void OnShippingAddressChanged();
    #endregion
		
		public InvoiceHeader()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceType", DbType="TinyInt NOT NULL")]
		public byte InvoiceType
		{
			get
			{
				return this._InvoiceType;
			}
			set
			{
				if ((this._InvoiceType != value))
				{
					this.OnInvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceType = value;
					this.SendPropertyChanged("InvoiceType");
					this.OnInvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PartType
		{
			get
			{
				return this._PartType;
			}
			set
			{
				if ((this._PartType != value))
				{
					this.OnPartTypeChanging(value);
					this.SendPropertyChanging();
					this._PartType = value;
					this.SendPropertyChanged("PartType");
					this.OnPartTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartID", DbType="Int NOT NULL")]
		public int PartID
		{
			get
			{
				return this._PartID;
			}
			set
			{
				if ((this._PartID != value))
				{
					this.OnPartIDChanging(value);
					this.SendPropertyChanging();
					this._PartID = value;
					this.SendPropertyChanged("PartID");
					this.OnPartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="Int NOT NULL")]
		public int Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PostDate
		{
			get
			{
				return this._PostDate;
			}
			set
			{
				if ((this._PostDate != value))
				{
					this.OnPostDateChanging(value);
					this.SendPropertyChanging();
					this._PostDate = value;
					this.SendPropertyChanged("PostDate");
					this.OnPostDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostedToStore", DbType="Bit NOT NULL")]
		public bool PostedToStore
		{
			get
			{
				return this._PostedToStore;
			}
			set
			{
				if ((this._PostedToStore != value))
				{
					this.OnPostedToStoreChanging(value);
					this.SendPropertyChanging();
					this._PostedToStore = value;
					this.SendPropertyChanged("PostedToStore");
					this.OnPostedToStoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float NOT NULL")]
		public double Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountValue", DbType="Float NOT NULL")]
		public double DiscountValue
		{
			get
			{
				return this._DiscountValue;
			}
			set
			{
				if ((this._DiscountValue != value))
				{
					this.OnDiscountValueChanging(value);
					this.SendPropertyChanging();
					this._DiscountValue = value;
					this.SendPropertyChanged("DiscountValue");
					this.OnDiscountValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRation", DbType="Float NOT NULL")]
		public double DiscountRation
		{
			get
			{
				return this._DiscountRation;
			}
			set
			{
				if ((this._DiscountRation != value))
				{
					this.OnDiscountRationChanging(value);
					this.SendPropertyChanging();
					this._DiscountRation = value;
					this.SendPropertyChanged("DiscountRation");
					this.OnDiscountRationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Float NOT NULL")]
		public double Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxValue", DbType="Float NOT NULL")]
		public double TaxValue
		{
			get
			{
				return this._TaxValue;
			}
			set
			{
				if ((this._TaxValue != value))
				{
					this.OnTaxValueChanging(value);
					this.SendPropertyChanging();
					this._TaxValue = value;
					this.SendPropertyChanged("TaxValue");
					this.OnTaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expences", DbType="Float NOT NULL")]
		public double Expences
		{
			get
			{
				return this._Expences;
			}
			set
			{
				if ((this._Expences != value))
				{
					this.OnExpencesChanging(value);
					this.SendPropertyChanging();
					this._Expences = value;
					this.SendPropertyChanged("Expences");
					this.OnExpencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Float NOT NULL")]
		public double Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this.OnNetChanging(value);
					this.SendPropertyChanging();
					this._Net = value;
					this.SendPropertyChanged("Net");
					this.OnNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Piad", DbType="Float NOT NULL")]
		public double Piad
		{
			get
			{
				return this._Piad;
			}
			set
			{
				if ((this._Piad != value))
				{
					this.OnPiadChanging(value);
					this.SendPropertyChanging();
					this._Piad = value;
					this.SendPropertyChanged("Piad");
					this.OnPiadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drawer", DbType="Int NOT NULL")]
		public int Drawer
		{
			get
			{
				return this._Drawer;
			}
			set
			{
				if ((this._Drawer != value))
				{
					this.OnDrawerChanging(value);
					this.SendPropertyChanging();
					this._Drawer = value;
					this.SendPropertyChanged("Drawer");
					this.OnDrawerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remaining", DbType="Float NOT NULL")]
		public double Remaining
		{
			get
			{
				return this._Remaining;
			}
			set
			{
				if ((this._Remaining != value))
				{
					this.OnRemainingChanging(value);
					this.SendPropertyChanging();
					this._Remaining = value;
					this.SendPropertyChanged("Remaining");
					this.OnRemainingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress", DbType="NVarChar(MAX)")]
		public string ShippingAddress
		{
			get
			{
				return this._ShippingAddress;
			}
			set
			{
				if ((this._ShippingAddress != value))
				{
					this.OnShippingAddressChanging(value);
					this.SendPropertyChanging();
					this._ShippingAddress = value;
					this.SendPropertyChanged("ShippingAddress");
					this.OnShippingAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pro_ID;
		
		private string _Pro_Code;
		
		private string _Pro_Name;
		
		private byte _Pro_Type;
		
		private string _Pro_Descreption;
		
		private bool _Pro_IsActive;
		
		private System.Data.Linq.Binary _Pro_Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPro_IDChanging(int value);
    partial void OnPro_IDChanged();
    partial void OnPro_CodeChanging(string value);
    partial void OnPro_CodeChanged();
    partial void OnPro_NameChanging(string value);
    partial void OnPro_NameChanged();
    partial void OnPro_TypeChanging(byte value);
    partial void OnPro_TypeChanged();
    partial void OnPro_DescreptionChanging(string value);
    partial void OnPro_DescreptionChanged();
    partial void OnPro_IsActiveChanging(bool value);
    partial void OnPro_IsActiveChanged();
    partial void OnPro_ImageChanging(System.Data.Linq.Binary value);
    partial void OnPro_ImageChanged();
    #endregion
		
		public Product()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pro_ID
		{
			get
			{
				return this._Pro_ID;
			}
			set
			{
				if ((this._Pro_ID != value))
				{
					this.OnPro_IDChanging(value);
					this.SendPropertyChanging();
					this._Pro_ID = value;
					this.SendPropertyChanged("Pro_ID");
					this.OnPro_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Code", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Pro_Code
		{
			get
			{
				return this._Pro_Code;
			}
			set
			{
				if ((this._Pro_Code != value))
				{
					this.OnPro_CodeChanging(value);
					this.SendPropertyChanging();
					this._Pro_Code = value;
					this.SendPropertyChanged("Pro_Code");
					this.OnPro_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Pro_Name
		{
			get
			{
				return this._Pro_Name;
			}
			set
			{
				if ((this._Pro_Name != value))
				{
					this.OnPro_NameChanging(value);
					this.SendPropertyChanging();
					this._Pro_Name = value;
					this.SendPropertyChanged("Pro_Name");
					this.OnPro_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Type", DbType="TinyInt NOT NULL")]
		public byte Pro_Type
		{
			get
			{
				return this._Pro_Type;
			}
			set
			{
				if ((this._Pro_Type != value))
				{
					this.OnPro_TypeChanging(value);
					this.SendPropertyChanging();
					this._Pro_Type = value;
					this.SendPropertyChanged("Pro_Type");
					this.OnPro_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Descreption", DbType="NVarChar(MAX)")]
		public string Pro_Descreption
		{
			get
			{
				return this._Pro_Descreption;
			}
			set
			{
				if ((this._Pro_Descreption != value))
				{
					this.OnPro_DescreptionChanging(value);
					this.SendPropertyChanging();
					this._Pro_Descreption = value;
					this.SendPropertyChanged("Pro_Descreption");
					this.OnPro_DescreptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_IsActive", DbType="Bit NOT NULL")]
		public bool Pro_IsActive
		{
			get
			{
				return this._Pro_IsActive;
			}
			set
			{
				if ((this._Pro_IsActive != value))
				{
					this.OnPro_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._Pro_IsActive = value;
					this.SendPropertyChanged("Pro_IsActive");
					this.OnPro_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Pro_Image
		{
			get
			{
				return this._Pro_Image;
			}
			set
			{
				if ((this._Pro_Image != value))
				{
					this.OnPro_ImageChanging(value);
					this.SendPropertyChanging();
					this._Pro_Image = value;
					this.SendPropertyChanged("Pro_Image");
					this.OnPro_ImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductUnit")]
	public partial class ProductUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProductID;
		
		private int _UnitID;
		
		private double _BuyPrice;
		
		private double _SalePrice;
		
		private double _SaleDiscount;
		
		private string _Barcode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnUnitIDChanging(int value);
    partial void OnUnitIDChanged();
    partial void OnBuyPriceChanging(double value);
    partial void OnBuyPriceChanged();
    partial void OnSalePriceChanging(double value);
    partial void OnSalePriceChanged();
    partial void OnSaleDiscountChanging(double value);
    partial void OnSaleDiscountChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    #endregion
		
		public ProductUnit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int NOT NULL")]
		public int UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyPrice", DbType="Float NOT NULL")]
		public double BuyPrice
		{
			get
			{
				return this._BuyPrice;
			}
			set
			{
				if ((this._BuyPrice != value))
				{
					this.OnBuyPriceChanging(value);
					this.SendPropertyChanging();
					this._BuyPrice = value;
					this.SendPropertyChanged("BuyPrice");
					this.OnBuyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Float NOT NULL")]
		public double SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleDiscount", DbType="Float NOT NULL")]
		public double SaleDiscount
		{
			get
			{
				return this._SaleDiscount;
			}
			set
			{
				if ((this._SaleDiscount != value))
				{
					this.OnSaleDiscountChanging(value);
					this.SendPropertyChanging();
					this._SaleDiscount = value;
					this.SendPropertyChanged("SaleDiscount");
					this.OnSaleDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreLog")]
	public partial class StoreLog
	{
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<byte> _SourceType;
		
		private System.Nullable<int> _SourceID;
		
		private System.Nullable<int> _ProductID;
		
		private System.Nullable<int> _StoreID;
		
		private System.Nullable<double> _Qty;
		
		private System.Nullable<bool> _IsInTransaction;
		
		private System.Nullable<double> _CostValue;
		
		private System.Nullable<System.DateTime> _insertTime;
		
		private string _Notes;
		
		public StoreLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceType", DbType="TinyInt")]
		public System.Nullable<byte> SourceType
		{
			get
			{
				return this._SourceType;
			}
			set
			{
				if ((this._SourceType != value))
				{
					this._SourceType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int")]
		public System.Nullable<int> SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this._SourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this._StoreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Float")]
		public System.Nullable<double> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this._Qty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInTransaction", DbType="Bit")]
		public System.Nullable<bool> IsInTransaction
		{
			get
			{
				return this._IsInTransaction;
			}
			set
			{
				if ((this._IsInTransaction != value))
				{
					this._IsInTransaction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostValue", DbType="Float")]
		public System.Nullable<double> CostValue
		{
			get
			{
				return this._CostValue;
			}
			set
			{
				if ((this._CostValue != value))
				{
					this._CostValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insertTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> insertTime
		{
			get
			{
				return this._insertTime;
			}
			set
			{
				if ((this._insertTime != value))
				{
					this._insertTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stores")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreID;
		
		private string _StoreName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreIDChanging(int value);
    partial void OnStoreIDChanged();
    partial void OnStoreNameChanging(string value);
    partial void OnStoreNameChanged();
    #endregion
		
		public Store()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="NVarChar(MAX)")]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this.OnStoreNameChanging(value);
					this.SendPropertyChanging();
					this._StoreName = value;
					this.SendPropertyChanged("StoreName");
					this.OnStoreNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
